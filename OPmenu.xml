<?xml version="1.0" encoding="UTF-8"?>

<!--
Tool Development Kit for SideFX Houdini
Copyright (C) 2021  Ivan Titov

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <https://www.gnu.org/licenses/>.
-->

<menuDocument>
    <menu>

        <subMenu id="opmenu.tdk_actions_menu">

            <label>TDK Actions</label>
            <parent>root_menu</parent>
            <insertAfter>opmenu.actions_menu</insertAfter>

            <scriptItem id="opmenu.tdk_generate_code">
                <label>Generate Code...</label>
                <scriptCode>
import houdini_tdk as tdk

tdk.showGenerateCode(**kwargs)
                </scriptCode>
            </scriptItem>

            <scriptItem id="opmenu.tdk_show_node_user_data">
                <label>Show Node User Data...</label>
                <scriptCode>
import houdini_tdk
reload(houdini_tdk)

houdini_tdk.showNodeUserData(cached=kwargs['shiftclick'], **kwargs)
                </scriptCode>
            </scriptItem>

            <separatorItem/>

            <scriptItem id="opmenu.tdk_make_hda_by_template">
                <label>Make HDA by Template...</label>
                <context>
                    <expression>
                        node = kwargs['node']
                        return node.type().name().startswith('tdk::template')
                    </expression>
                </context>
                <scriptCode>
import houdini_tdk as tdk

tdk.showMakeHDAByTemplateDialog(**kwargs)
                </scriptCode>
            </scriptItem>

            <scriptItem id="opmenu.tdk_open_hda_location">
                <label>Open HDA Location...</label>
                <context>
                    <expression>
                        node = kwargs['node']
                        return node.type().definition() is not None
                    </expression>
                </context>
                <scriptCode>
from houdini_tdk.utils import openFileLocation

node = kwargs['node']
path = node.type().definition().libraryFilePath()
openFileLocation(path)
                </scriptCode>
            </scriptItem>

            <scriptItem id="opmenu.tdk_new_hda_version">
                <label>New HDA Version...</label>
                <context>
                    <expression>
                        node = kwargs['node']
                        return node.type().definition() is not None
                    </expression>
                </context>
                <scriptCode>
import houdini_tdk as tdk

tdk.showNewVersionDialog(**kwargs)
                </scriptCode>
            </scriptItem>

        </subMenu>

    </menu>
</menuDocument>
